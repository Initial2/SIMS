// Generated by view binder compiler. Do not edit!
package com.example.sims.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.sims.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button inputStuInfo;

  @NonNull
  public final Button modifyScore;

  @NonNull
  public final Button modifyStuInfo;

  @NonNull
  public final Button stuCourse;

  @NonNull
  public final Button teachTask;

  private ActivityAdminBinding(@NonNull ConstraintLayout rootView, @NonNull Button inputStuInfo,
      @NonNull Button modifyScore, @NonNull Button modifyStuInfo, @NonNull Button stuCourse,
      @NonNull Button teachTask) {
    this.rootView = rootView;
    this.inputStuInfo = inputStuInfo;
    this.modifyScore = modifyScore;
    this.modifyStuInfo = modifyStuInfo;
    this.stuCourse = stuCourse;
    this.teachTask = teachTask;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.input_stuInfo;
      Button inputStuInfo = rootView.findViewById(id);
      if (inputStuInfo == null) {
        break missingId;
      }

      id = R.id.modify_score;
      Button modifyScore = rootView.findViewById(id);
      if (modifyScore == null) {
        break missingId;
      }

      id = R.id.modify_stuInfo;
      Button modifyStuInfo = rootView.findViewById(id);
      if (modifyStuInfo == null) {
        break missingId;
      }

      id = R.id.stu_course;
      Button stuCourse = rootView.findViewById(id);
      if (stuCourse == null) {
        break missingId;
      }

      id = R.id.teach_task;
      Button teachTask = rootView.findViewById(id);
      if (teachTask == null) {
        break missingId;
      }

      return new ActivityAdminBinding((ConstraintLayout) rootView, inputStuInfo, modifyScore,
          modifyStuInfo, stuCourse, teachTask);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
